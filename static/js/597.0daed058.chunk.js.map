{"version":3,"file":"static/js/597.0daed058.chunk.js","mappings":"8LAyCA,UArCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,gBACmBN,GAChBO,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,KAAX,OAAwBJ,EAAWM,EAAmBF,GAAtD,IACLG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACZ,IAEJ,IAAMU,EAAqB,SAAAP,GACzB,OAAOA,EAAQY,KAAI,kBAAiD,CAClEC,cADiB,EAAGA,cAEpBC,UAFiB,EAAkBA,UAGnCC,aAHiB,EAA6BA,aAA7B,GAKpB,EAED,OACE,eAAIC,UAAU,iBAAd,SACGhB,EAAQY,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACxC,OACE,2BACE,gBACEE,IAAG,yCAAoCF,GACvCG,IAAKL,KAEP,uBAAIA,KACJ,uBAAIC,MANGD,EASZ,KAGN,C,8DCtCKM,EAAU,mCACVC,EAAW,+BAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACqBC,EAAAA,EAAAA,IAAA,UACdF,EADc,wCAC0BD,IAF/C,cACQb,EADR,yBAISA,GAJT,kEAOeiB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,uFACqBF,EAAAA,EAAAA,IAAA,UACdF,EADc,kBACII,EADJ,oBACkBL,EADlB,8CADrB,cACQb,EADR,yBAISA,GAJT,kEAOemB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BD,GAA/B,uFACqBF,EAAAA,EAAAA,IAAA,UACdF,EADc,kBACII,EADJ,4BAC0BL,EAD1B,oBADrB,cACQb,EADR,yBAISA,GAJT,kEAOeoB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BF,GAA/B,uFACqBF,EAAAA,EAAAA,IAAA,UACdF,EADc,kBACII,EADJ,4BAC0BL,EAD1B,oBADrB,cACQb,EADR,yBAISA,GAJT,kEAOeqB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFACqBN,EAAAA,EAAAA,IAAA,UACdF,EADc,iCACmBD,EADnB,wCAC0DS,IAF/E,cACQtB,EADR,yBAISA,GAJT,kEAMA,IAAMuB,EAAM,CACVR,eArCF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAoCbE,aApCF,SAO4B,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA8BbE,gBA9BF,SAO+B,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAwBbC,gBAxBF,SAO+B,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAkBbC,iBAlBF,SAOgC,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAcf,K","sources":["components/Cast.jsx","services/movies-api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport moviesAPI from '../services/movies-api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    moviesAPI\n      .getMovieCredits(movieId)\n      .then(({ data: { cast } }) => setCredits(normalaziedCredits(cast)))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  const normalaziedCredits = credits => {\n    return credits.map(({ original_name, character, profile_path }) => ({\n      original_name,\n      character,\n      profile_path,\n    }));\n  };\n\n  return (\n    <ul className=\"actors-gallery\">\n      {credits.map(({ original_name, character, profile_path }) => {\n        return (\n          <li key={original_name}>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n              alt={original_name}\n            />\n            <p>{original_name}</p>\n            <p>{character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = '5436fbaf6b3dd7d125e5fbc4adba788b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function getTrendMovies() {\n  const data = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nasync function getMovieById(id) {\n  const data = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&append_to_response=videos&language=en-US`\n  );\n  return data;\n}\n\nasync function getMovieCredits(id) {\n  const data = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nasync function getMovieReviews(id) {\n  const data = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nasync function getMoviesByQuery(query) {\n  const data = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return data;\n}\nconst api = {\n  getTrendMovies,\n  getMovieById,\n  getMovieCredits,\n  getMovieReviews,\n  getMoviesByQuery,\n};\n\nexport default api;\n"],"names":["movieId","useParams","useState","credits","setCredits","useEffect","moviesAPI","then","cast","data","normalaziedCredits","catch","error","console","log","map","original_name","character","profile_path","className","src","alt","API_KEY","BASE_URL","getTrendMovies","axios","getMovieById","id","getMovieCredits","getMovieReviews","getMoviesByQuery","query","api"],"sourceRoot":""}