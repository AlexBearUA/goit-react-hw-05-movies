{"version":3,"file":"static/js/847.36ac505e.chunk.js","mappings":"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","sources":["pages/MovieDetails.js","services/movies-api.js"],"sourcesContent":["import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useEffect, useRef, Suspense, useState } from 'react';\nimport moviesAPI from '../services/movies-api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const [\n    { original_title, poster_path, vote_average, overview, genres },\n    setMovie,\n  ] = useState([]);\n\n  useEffect(() => {\n    moviesAPI\n      .getMovieById(movieId)\n      .then(({ data }) => setMovie(normalaziedMovie(data)))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  const normalaziedMovie = ({\n    original_title,\n    poster_path,\n    genres,\n    vote_average,\n    overview,\n  }) => ({ original_title, poster_path, genres, vote_average, overview });\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <h2>{original_title}</h2>\n      <img\n        src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n        alt={original_title}\n      />\n      <p>User score {vote_average}</p>\n      <p>Overview: {overview}</p>\n      <p>\n        Genres:\n        {genres &&\n          genres.reduce((resultString, genre) => {\n            return resultString + ' ' + genre.name;\n          }, '')}\n      </p>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = '5436fbaf6b3dd7d125e5fbc4adba788b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function getTrendMovies() {\n  const data = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nasync function getMovieById(id) {\n  const data = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&append_to_response=videos&language=en-US`\n  );\n  return data;\n}\n\nasync function getMovieCredits(id) {\n  const data = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nasync function getMovieReviews(id) {\n  const data = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nasync function getMoviesByQuery(query) {\n  const data = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return data;\n}\nconst api = {\n  getTrendMovies,\n  getMovieById,\n  getMovieCredits,\n  getMovieReviews,\n  getMoviesByQuery,\n};\n\nexport default api;\n"],"names":["movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","original_title","poster_path","vote_average","overview","genres","setMovie","useEffect","moviesAPI","then","data","normalaziedMovie","catch","error","console","log","to","current","src","alt","reduce","resultString","genre","name","Suspense","fallback","API_KEY","BASE_URL","getTrendMovies","axios","getMovieById","id","getMovieCredits","getMovieReviews","getMoviesByQuery","query","api"],"sourceRoot":""}