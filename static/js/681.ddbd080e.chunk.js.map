{"version":3,"file":"static/js/681.ddbd080e.chunk.js","mappings":"8LAyCA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,gBACmBN,GAChBO,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAA2BJ,EAAWM,EAAmBF,GAAzD,IACLG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACZ,IAEJ,IAAMU,EAAqB,SAAAP,GACzB,OAAOA,EAAQY,KAAI,kBAA8B,CAC/CC,OADiB,EAAGA,OAEpBC,QAFiB,EAAWA,QAG5BC,GAHiB,EAAoBA,GAApB,GAKpB,EAED,OACE,yBACIf,EAAQgB,OAAS,IACjB,eAAIC,UAAU,iBAAd,SACGjB,EAAQY,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,uBAAIF,KACJ,uBAAIC,MAFGC,EAKZ,QAEC,qEAGX,C,8DCtCKG,EAAU,mCACVC,EAAW,+BAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACqBC,EAAAA,EAAAA,IAAA,UACdF,EADc,wCAC0BD,IAF/C,cACQZ,EADR,yBAISA,GAJT,kEAOegB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BP,GAA5B,uFACqBM,EAAAA,EAAAA,IAAA,UACdF,EADc,kBACIJ,EADJ,oBACkBG,EADlB,8CADrB,cACQZ,EADR,yBAISA,GAJT,kEAOeiB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BR,GAA/B,uFACqBM,EAAAA,EAAAA,IAAA,UACdF,EADc,kBACIJ,EADJ,4BAC0BG,EAD1B,oBADrB,cACQZ,EADR,yBAISA,GAJT,kEAOekB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BT,GAA/B,uFACqBM,EAAAA,EAAAA,IAAA,UACdF,EADc,kBACIJ,EADJ,4BAC0BG,EAD1B,oBADrB,cACQZ,EADR,yBAISA,GAJT,kEAOemB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFACqBL,EAAAA,EAAAA,IAAA,UACdF,EADc,iCACmBD,EADnB,wCAC0DQ,IAF/E,cACQpB,EADR,yBAISA,GAJT,kEAMA,IAAMqB,EAAM,CACVP,eArCF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAoCbE,aApCF,SAO4B,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA8BbC,gBA9BF,SAO+B,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAwBbC,gBAxBF,SAO+B,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAkBbC,iBAlBF,SAOgC,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAcf,K","sources":["components/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport moviesAPI from '../services/movies-api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    moviesAPI\n      .getMovieReviews(movieId)\n      .then(({ data: { results } }) => setReviews(normalaziedReviews(results)))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  const normalaziedReviews = reviews => {\n    return reviews.map(({ author, content, id }) => ({\n      author,\n      content,\n      id,\n    }));\n  };\n\n  return (\n    <div>\n      {(reviews.length > 0 && (\n        <ul className=\"actors-gallery\">\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <p>{author}</p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )) || <p>We don't have any reviews for this movie</p>}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = '5436fbaf6b3dd7d125e5fbc4adba788b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function getTrendMovies() {\n  const data = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nasync function getMovieById(id) {\n  const data = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&append_to_response=videos&language=en-US`\n  );\n  return data;\n}\n\nasync function getMovieCredits(id) {\n  const data = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nasync function getMovieReviews(id) {\n  const data = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nasync function getMoviesByQuery(query) {\n  const data = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return data;\n}\nconst api = {\n  getTrendMovies,\n  getMovieById,\n  getMovieCredits,\n  getMovieReviews,\n  getMoviesByQuery,\n};\n\nexport default api;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","moviesAPI","then","results","data","normalaziedReviews","catch","error","console","log","map","author","content","id","length","className","API_KEY","BASE_URL","getTrendMovies","axios","getMovieById","getMovieCredits","getMovieReviews","getMoviesByQuery","query","api"],"sourceRoot":""}